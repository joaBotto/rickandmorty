[{"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\index.js":"1","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\App.js":"2","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\redux\\store.js":"3","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\redux\\reducer.js":"4","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Cards\\Cards.jsx":"5","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Welcome\\Welcome.jsx":"6","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Nav\\Nav.jsx":"7","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Detail\\Detail.jsx":"8","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Form\\Form.jsx":"9","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\About\\About.jsx":"10","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Favorites\\Favorites.jsx":"11","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\redux\\types.js":"12","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Form\\validate.js":"13","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Card\\Card.jsx":"14","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\SearchBar\\SearchBar.jsx":"15","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\redux\\actions.js":"16"},{"size":904,"mtime":1690245211676,"results":"17","hashOfConfig":"18"},{"size":2494,"mtime":1690501043158,"results":"19","hashOfConfig":"18"},{"size":293,"mtime":1690245089475,"results":"20","hashOfConfig":"18"},{"size":467,"mtime":1690289709473,"results":"21","hashOfConfig":"18"},{"size":1228,"mtime":1691758287445,"results":"22","hashOfConfig":"18"},{"size":2360,"mtime":1691673712162,"results":"23","hashOfConfig":"18"},{"size":1336,"mtime":1690466816740,"results":"24","hashOfConfig":"18"},{"size":2320,"mtime":1691673500430,"results":"25","hashOfConfig":"18"},{"size":3749,"mtime":1690500903135,"results":"26","hashOfConfig":"18"},{"size":914,"mtime":1689038154335,"results":"27","hashOfConfig":"18"},{"size":1082,"mtime":1690287453183,"results":"28","hashOfConfig":"18"},{"size":140,"mtime":1688069465512,"results":"29","hashOfConfig":"18"},{"size":624,"mtime":1689897228347,"results":"30","hashOfConfig":"18"},{"size":4869,"mtime":1691758313670,"results":"31","hashOfConfig":"18"},{"size":1341,"mtime":1689251240555,"results":"32","hashOfConfig":"18"},{"size":743,"mtime":1690498852206,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"i06lq1",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\index.js",[],[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\App.js",["86"],[],"import \"./App.css\";\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport About from \"./components/About/About\";\r\nimport Detail from \"./components/Detail/Detail\";\r\nimport Form from \"./components/Form/Form\";\r\nimport Favorites from \"./components/Favorites/Favorites\";\r\nimport Welcome from \"./components/Welcome/Welcome\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Routes,\r\n  Route,\r\n  useLocation,\r\n  // Navigate,\r\n  useNavigate,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [characters, setCharacters] = useState([]);\r\n  const [access, setAccess] = useState(false);\r\n\r\n  const URL = \"http://localhost:3001/rickandmorty/\";\r\n\r\n  useEffect(() => {\r\n    !access && navigate(\"/\");\r\n  }, [access]);\r\n\r\n  const login = async ({ email, password }) => {\r\n    try {\r\n      const { data } = await axios(\r\n        `${URL}login?email=${email}&password=${password}`\r\n      );\r\n      const { access } = data;\r\n      console.log(access);\r\n      setAccess(access);\r\n      if (access) {\r\n        navigate(\"/home\");\r\n      } else {\r\n        navigate(\"/form\");\r\n      }\r\n    } catch (error) {\r\n      window.alert(error.message);\r\n    }\r\n  };\r\n\r\n  const onSearch = async (id) => {\r\n    try {\r\n      if (!id) alert(\"Ingresa un ID\");\r\n      if (characters.find((char) => char.id === parseInt(id))) {\r\n        alert(`Ya existe el personaje con el id ${id}`);\r\n        return;\r\n      }\r\n      const { data } = await axios(\r\n        `https://rickandmortyapi.com/api/character/${id}`\r\n      );\r\n      if (data.name) {\r\n        setCharacters((oldChars) => [...oldChars, data]);\r\n      }\r\n    } catch (error) {\r\n      window.alert(error.response.data.error);\r\n    }\r\n  };\r\n  function onClose(id) {\r\n    setCharacters(characters.filter((character) => character.id !== id));\r\n  }\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      {location.pathname !== \"/\" && <Nav onSearch={onSearch} />}\r\n      <Routes>\r\n        <Route path=\"/\" element={<Welcome />} />\r\n        <Route path=\"/form\" element={<Form login={login} />} />\r\n        <Route\r\n          path=\"/home\"\r\n          element={<Cards characters={characters} onClose={onClose} />}\r\n        />\r\n        <Route path=\"/favorites\" element={<Favorites />} />\r\n        <Route path=\"/about\" element={<About />} />\r\n        <Route path=\"/detail/:id\" element={<Detail />} />\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\redux\\store.js",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\redux\\reducer.js",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Cards\\Cards.jsx",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Welcome\\Welcome.jsx",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Nav\\Nav.jsx",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Detail\\Detail.jsx",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Form\\Form.jsx",["87","88"],[],"import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport style from \"./Form.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport validate from \"./validate\";\r\n// const regEx = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{3})+$/;\r\nconst StyledForm = styled.form`\r\n  background-color: #1749;\r\n  margin: auto;\r\n  margin-top: 30px;\r\n  padding: 25px;\r\n  width: 300px;\r\n  height: 150px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-family: Calibri, sans-serif;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  outline: none;\r\n  border: 3px solid lightgreen;\r\n  box-shadow: 7px 7px 5px lightgreen;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 170px;\r\n  background-color: #1149;\r\n  color: black;\r\n  border: none;\r\n  padding: 10px 15px 5px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: lightgreen;\r\n    cursor: mouse;\r\n    transition: 0.5s;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    width: 200px;\r\n    background-color: #1739;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 50px;\r\n  height: 20px;\r\n  background-color: #1749;\r\n  color: black;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: lightgreen;\r\n    cursor: pointer;\r\n    width: 70px;\r\n    transition: 0.5s;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    transition: 0.5s ease all;\r\n    width: 70px;\r\n  }\r\n  &:active {\r\n    background-color: #6b6e6f;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nconst ButtonBack = styled.button`\r\n  width: 50px;\r\n  height: 20px;\r\n  border: none;\r\n  background-color: #1749;\r\n  color: black;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: lightgreen;\r\n    cursor: pointer;\r\n    width: 70px;\r\n    transition: 0.5s;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    transition: 0.5s ease all;\r\n    width: 70px;\r\n  }\r\n  &:active {\r\n    background-color: #6b6e6f;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nconst SpanError = styled.span`\r\n  color: red;\r\n`;\r\n\r\n// const validate = (userData, setErrors, errors) => {\r\n//   if (!userData.email) {\r\n//     setErrors({ ...errors, email: \"Invalid mail\" });\r\n//   } else {\r\n//     if (regEx.test(userData.email)) setErrors({ ...errors, email: \"\" });\r\n//     else setErrors({ ...errors, email: \"Invalid mail\" });\r\n//   }\r\n// };\r\n\r\nexport default function Form() {\r\n  const [userData, setData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!errors.email || !errors.password) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const property = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    setData({ ...userData, [property]: value });\r\n    setErrors(validate({ ...userData, [property]: value }));\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={submitHandler}>\r\n      <label htmlFor=\"email\">Email:</label>\r\n      <br />\r\n      <Input\r\n        type=\"text\"\r\n        name=\"email\"\r\n        placeholder=\"Your email\"\r\n        value={userData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n      <SpanError>{errors.email}</SpanError>\r\n      <label htmlFor=\"password\">Password:</label>\r\n      <Input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Your password\"\r\n        value={userData.password}\r\n        onChange={handleChange}\r\n        required\r\n        // className={!errors.password ? style.success : style.miss}\r\n      />\r\n      <SpanError>{errors.password}</SpanError>\r\n      <hr />\r\n      <Link to=\"/home\">\r\n        <Button type=\"submit\" name=\"button\">\r\n          Log In\r\n        </Button>\r\n      </Link>\r\n      <hr />\r\n    </StyledForm>\r\n  );\r\n}\r\n","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\About\\About.jsx",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Favorites\\Favorites.jsx",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\redux\\types.js",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Form\\validate.js",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\Card\\Card.jsx",["89"],[],"import styled, { keyframes } from \"styled-components\";\r\nimport React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { addFav, removeFav } from \"../../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n//! ESTRUCTURAS ------------------------------------------------------------------------------\r\n\r\nfunction Card({\r\n  name,\r\n  status,\r\n  species,\r\n  gender,\r\n  origin,\r\n  image,\r\n  id,\r\n  onClose,\r\n  myFavourites,\r\n  removeFav,\r\n  addFav,\r\n}) {\r\n  const { pathname } = useLocation();\r\n  const [isFav, setIsFav] = useState(false);\r\n  useEffect(() => {\r\n    myFavourites.forEach((fav) => {\r\n      if (fav.id === id) {\r\n        setIsFav(true);\r\n      }\r\n    });\r\n  }, [myFavourites]);\r\n\r\n  const handleFavorite = () => {\r\n    if (isFav) {\r\n      setIsFav(false);\r\n      removeFav(id);\r\n    } else {\r\n      setIsFav(true);\r\n      addFav({ name, status, species, gender, origin, image, id });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <DivCard>\r\n        <DivImg>\r\n          {pathname === \"/home\" && (\r\n            <ButtonClose\r\n              onClick={() => {\r\n                onClose(id);\r\n              }}\r\n            >\r\n              X\r\n            </ButtonClose>\r\n          )}\r\n          {isFav ? (\r\n            <ButtonFav\r\n              title=\"Click para quitar de favoritos\"\r\n              onClick={handleFavorite}\r\n            >\r\n              ❤️\r\n            </ButtonFav>\r\n          ) : (\r\n            <ButtonFav title=\"Click para favear\" onClick={handleFavorite}>\r\n              🤍\r\n            </ButtonFav>\r\n          )}\r\n          {/* {isFav ? null : (\r\n            <ButtonClose title=\"Click para cerrar\" onClick={() => onClose(id)}>\r\n              Close\r\n            </ButtonClose>\r\n          )} */}\r\n          <Img src={image} alt=\"\" />\r\n        </DivImg>\r\n        <DivData>\r\n          <InfoText>\r\n            Species: {species}\r\n            <hr />\r\n            Status: {status}\r\n          </InfoText>\r\n          <Link to={`/detail/${id}`}>\r\n            <Name title=\"haz click para +info sobre este personaje\">\r\n              {name}\r\n            </Name>\r\n          </Link>\r\n          {/* <InfoText title=\"Genero\">{gender}</InfoText> */}\r\n          {/* <InfoText title=\"Origen\">{origin}</InfoText> */}\r\n        </DivData>\r\n      </DivCard>\r\n    </>\r\n  );\r\n}\r\nexport const mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addFav: (character) => {\r\n      dispatch(addFav(character));\r\n    },\r\n    removeFav: (id) => {\r\n      dispatch(removeFav(id));\r\n    },\r\n  };\r\n};\r\nexport const mapStateToProps = (state) => {\r\n  return {\r\n    myFavourites: state.myFavourites,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);\r\n\r\n//! ESTILOS --------------------------------------------------\r\n\r\n// const fadeInAnimation = keyframes`\r\n//   from {\r\n//     opacity: 0;\r\n//     transform: translateY(20px);\r\n//   }\r\n//   to{\r\n//     opacity: 1;\r\n//     transform: translateY(0);\r\n//   }\r\n// `;\r\nconst scaleAnimation = keyframes`\r\n  from {\r\n    transform: scale(0);\r\n  }\r\n  to {\r\n    transform: scale(1);\r\n  }\r\n`;\r\nconst DivCard = styled.div`\r\n  border: 3px solid #b5b5b5;\r\n  border-radius: 15px;\r\n  width: 250px;\r\n  height: 350px;\r\n  color: black;\r\n  background-color: #1748;\r\n  margin: 30px;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  animation: ${scaleAnimation} 0.3s ease-out;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    background-color: #174;\r\n  }\r\n`;\r\n\r\nconst DivData = styled.div`\r\n  text-align: center;\r\n`;\r\nconst Name = styled.h2`\r\n  z-index: 1;\r\n  margin: auto;\r\n  position: relative;\r\n  padding: 10px;\r\n  margin-top: 30px;\r\n  font-size: 1rem;\r\n  width: 50%;\r\n  height: 30%;\r\n  background-color: #173;\r\n  color: black;\r\n  border-radius: 15px;\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  &:hover {\r\n    transform: scaleY(1);\r\n    box-shadow: 10px 10px 10px black;\r\n  }\r\n`;\r\n\r\nconst InfoText = styled.h4`\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst DivImg = styled.div`\r\n  position: relative;\r\n  height: 220px;\r\n  padding: 10px;\r\n  margin-top: -12px;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 100%;\r\n  border-radius: 5px 5px 5px 5px;\r\n  position: relative;\r\n  top: 5px;\r\n`;\r\n\r\nconst ButtonClose = styled.button`\r\n  margin-top: 5px;\r\n  right: 80px;\r\n  color: balck;\r\n  border: 0;\r\n  border-radius: 3px;\r\n  background-color: #1749;\r\n  box-shadow: black 5px 5px 5px;\r\n  cursor: pointer;\r\n  height: 25px;\r\n  width: 45px;\r\n  &:hover {\r\n    background-color: lightgreen;\r\n    cursor: mouse;\r\n    transition: 0.5s;\r\n  }\r\n`;\r\nconst ButtonFav = styled.button`\r\n  margin: 5px;\r\n  right: 80px;\r\n  color: white;\r\n  border: 2px;\r\n  border-radius: 3px;\r\n  background-color: #1749;\r\n  box-shadow: black 5px 5px 5px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: lightgreen;\r\n    cursor: mouse;\r\n    transition: 0.5s;\r\n  }\r\n`;\r\n","C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\components\\SearchBar\\SearchBar.jsx",[],[],"C:\\Users\\joaqu\\Desktop\\Proyectos\\rickandmorty\\Client\\src\\redux\\actions.js",[],[],{"ruleId":"90","severity":1,"message":"91","line":28,"column":6,"nodeType":"92","endLine":28,"endColumn":14,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":13},{"ruleId":"94","severity":1,"message":"98","line":72,"column":7,"nodeType":"96","messageId":"97","endLine":72,"endColumn":17},{"ruleId":"90","severity":1,"message":"99","line":31,"column":6,"nodeType":"92","endLine":31,"endColumn":20,"suggestions":"100"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["101"],"no-unused-vars","'style' is defined but never used.","Identifier","unusedVar","'ButtonBack' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["102"],{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [access, navigate]",{"range":"107","text":"108"},"Update the dependencies array to be: [id, myFavourites]",{"range":"109","text":"110"},[814,822],"[access, navigate]",[750,764],"[id, myFavourites]"]